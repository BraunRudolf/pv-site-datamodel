name: CI Pipeline for SDK - Python

on:
  push:
    branches: ["main"]

env:
  PYTHON_SDK_DIRECTORY: sdk/python

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
      - name: Test with unittest
        run: python -m unittest discover -s $PYTHON_SDK_DIRECTORY -t $PYTHON_SDK_DIRECTORY

  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: $PYTHON_SDK_DIRECTORY
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Build python package
        run: python setup.py install

  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: $PYTHON_SDK_DIRECTORY
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
      - name: Publish python package
        run: python setup.py upload
